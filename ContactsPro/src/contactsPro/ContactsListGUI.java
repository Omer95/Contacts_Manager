package contactsPro;
import java.io.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author Omer Farooq Ahmed, Maaz Hassan, Tabish Muzaffar
 */
public class ContactsListGUI extends javax.swing.JFrame {
    /*
    Method for recursively traversing the phoneTrie to grab contact details object
    */
	public void DisplayNumber(){
	    ToDisplayNumber(phoneTrie.rootNumber);
	}
	public NodeNumber ToDisplayNumber(NodeNumber rootN){

//	    for(int i = 0; i < 1; i++){
	        
	        if(rootN.zero != null){
	        ToDisplayNumber(rootN.zero);
	        }
	        
	        if(rootN.i != null){
	        ToDisplayNumber(rootN.i);
	        }
	        
	        if(rootN.ii != null){
	        ToDisplayNumber(rootN.ii);
	        }
	        
	        if(rootN.iii != null){
	        ToDisplayNumber(rootN.iii);
	        }
	        
	        if(rootN.iv != null){
	        ToDisplayNumber(rootN.iv);
	        }
	        
	        if(rootN.v != null){
	        ToDisplayNumber(rootN.v);
	        }
	        
	        if(rootN.vi != null){
	        ToDisplayNumber(rootN.vi);
	        }
	        
	        if(rootN.vii != null){
	        ToDisplayNumber(rootN.vii);
	        } 
	        
	        if(rootN.viii != null){
	        ToDisplayNumber(rootN.viii);
	        } 
	        
	        if(rootN.ix != null){
	        ToDisplayNumber(rootN.ix);
	        }        
	        
	        if(rootN.end == true){
	        	listNames.addElement(rootN.ContactD.FName+" "+rootN.ContactD.LName+": "+rootN.ContactD.PNumber);
	        	//rootN.ContactD.printNumber();
	        }
	        else{
	        }
	  //  }
	return rootN;
	}

    /**
     * Creates new form ContactsListGUI
     */
    //PROPERTIES
    public static DefaultListModel listNames= new DefaultListModel();
    public static  PhoneNumber phoneTrie= new PhoneNumber();
    public static FirstName fNameTrie= new FirstName();
    public static LastName lNameTrie= new LastName();
    //CONSTRUCTOR
    public ContactsListGUI() {
    	//listNames.addElement("Omer");
        //Deserializing the tries
    	//phoneTrie
        try {
            ObjectInputStream in= new ObjectInputStream(new FileInputStream ("trie3.ser"));
            phoneTrie= (PhoneNumber) in.readObject();
            in.close();
        }
        catch (IOException i) {
            i.printStackTrace();
        }
        catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        //fNameTrie
        try {
        	ObjectInputStream in2= new ObjectInputStream (new FileInputStream("trie.ser"));
        	fNameTrie= (FirstName) in2.readObject();
        	in2.close();
        }
        catch (IOException i) {
        	i.printStackTrace();
        }
        catch (ClassNotFoundException e) {
        	e.printStackTrace();
        }
        //lNameTrie
        try {
        	ObjectInputStream in3= new ObjectInputStream (new FileInputStream("trie2.ser"));
        	lNameTrie= (LastName) in3.readObject();
        	in3.close();
        }
        catch (IOException i) {
        	i.printStackTrace();
        }
        catch (ClassNotFoundException e) {
        	e.printStackTrace();
        }
        //traversing the phoneTrie to add the contacts to the jList
        DisplayNumber();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<String>(listNames);
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon("Images/contactsPro.png")); // NOI18N
        jLabel1.setText("jLabel1");

        jButton1.setIcon(new javax.swing.ImageIcon("Images/newContactFinal.png")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Simplifica", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Search By");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "First Name", "Last Name", "Number" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Simplifica", 0, 24)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Search");

        jButton2.setIcon(new javax.swing.ImageIcon("Images/search.png")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jList1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jList1.setForeground(new java.awt.Color(78, 66, 244));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButton3.setIcon(new javax.swing.ImageIcon("Images/view contact.png")); // NOI18N
        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jButton4.setIcon(new javax.swing.ImageIcon("Images/delete.png")); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	//VIEW CONTACT BUTTON 
    	int temp2=-1;
    	String temp=jList1.getSelectedValue();
    	for (int i=0; i<temp.length(); i++) {
    		if (temp.charAt(i)==('0')) {
    			temp2=i;
    			break;
    		}
    	}
    	//getting the number from the jlist
    	String temp3=temp.substring(temp2, temp.length());
    	//using the number we got search for the contact details and display them on a new viewContacts()
    	this.SearchNumber(temp3);
    	ViewContactGUI newWindow= new ViewContactGUI(viewContactFName, viewContactLName, viewContactPhone1, viewContactPhone2, viewContactEmail1, viewContactEmail2, viewContactDOB, viewContactAddress);
    	newWindow.setVisible(true);
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	//DELETE BUTTON
    	int temp2=-1;
    	String temp=jList1.getSelectedValue();
    	for (int i=0; i<temp.length(); i++) {
    		if (temp.charAt(i)==('0')) {
    			temp2=i;
    			break;
    		}
    	}
    	String temp3=temp.substring(temp2, temp.length());
    	//Deleting the contact detail from phoneTrie
    	phoneTrie.DeleteNumber(temp3);
    	//removing the contact from appearing on the jList
    	listNames.removeElement(temp);
    	//Deleting the contact detail from the first name trie
    	int temp4=-1;
    	for (int i=0; i<temp.length();i++) {
    		if (temp.charAt(i)==' ') {
    			temp4=i;
    			break;
    		}
    	}
    	String temp5=temp.substring(0, temp4);
    	Delete(temp5 , temp3); //where temp5 is the first name and temp3 is the number 
    	//removing the contact from appearing on the jlist
    	listNames.removeElement(temp);
    	
    	//Deleting the contact detail from the last name trie. finally the last part of this project
    	String temp6=temp.substring(temp4+1,temp2-2); //temp6 being the last name
    	System.out.println(temp6+"here is the name \n\n"); //DEBUGGING
    	Delete2(temp6, temp3);
    	//removing the contact from appearing on the jlist
    	listNames.removeElement(temp);
    	try {
    		ObjectOutputStream out= new ObjectOutputStream(new FileOutputStream("trie3.ser"));
    		out.writeObject(phoneTrie);
    		out.close();
    	}
    	catch (IOException i) {
    		i.printStackTrace();
    	}
    	try {
    		ObjectOutputStream out2= new ObjectOutputStream(new FileOutputStream("trie.ser"));
    		out2.writeObject(fNameTrie);
    		out2.close();
    	}
    	catch (IOException i) {
    		i.printStackTrace();
    	}
    	try {
    		ObjectOutputStream out3= new ObjectOutputStream(new FileOutputStream("trie2.ser"));
    		out3.writeObject(lNameTrie);
    		out3.close();
    	}
    	catch (IOException i) {
    		i.printStackTrace();
    	}
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	//NEW CONTACT BUTTON 
    	NewContactGUI newWindow= new NewContactGUI();
    	newWindow.setVisible(true);
    	
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    	//SEARCH BUTTON
    	String input=jTextField1.getText();
    	System.out.println(jTextField1.getText()); //DEBUGGING
    	//if first name is selected
    	if (jComboBox1.getSelectedIndex()==0) {
    		SearchResultsGUI newResultsWindow= new SearchResultsGUI();
    		SearchResultsGUI.listResults.clear();
    		DisplayNameWhenTyped(input);
    		newResultsWindow.setVisible(true);
    		
    	}
    	//if last name is selected
    	else if (jComboBox1.getSelectedIndex()==1) {
    		SearchResultsGUI newResultWindow= new SearchResultsGUI();
    		SearchResultsGUI.listResults.clear();
    		DisplayNameWhenTyped2(input);
    		newResultWindow.setVisible(true);
    	}
    	//if number is selected
    	else {
    		SearchResultsGUI newResultWindow= new SearchResultsGUI();
    		SearchResultsGUI.listResults.clear();
    		SearchNumberWhenTyped(input);
    		newResultWindow.setVisible(true);
    	}
    }                                        

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ContactsListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ContactsListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ContactsListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ContactsListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ContactsListGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList<String> jList1;
    public static String viewContactFName, viewContactLName, viewContactPhone1, viewContactPhone2, viewContactEmail1, viewContactEmail2, viewContactDOB, viewContactAddress;
    // End of variables declaration       
    
    public void SearchNumber(String Number){
    	int t = 0;
    	NodeNumber temp;
    	temp = phoneTrie.rootNumber; 
    	//Goes into this recursive function to fetch value. 
    	temp = ToSearchNumber(phoneTrie.rootNumber, Number, t);

    	}

    public NodeNumber ToSearchNumber(NodeNumber rootN, String name, int strV ){
    	    
    	    char c = 0; //to Store each letter of string.
    	    NodeNumber temp; 
    	    
    	    if(strV < name.length()){ //itrates through string and stores letter in 'c' after each recursive call. 
    	    c = name.charAt(strV);
    	    strV++;
    	    }
    	    else{ //checks once we have reached the end of the string if the boolean/marker is true then the word is present else no. 
    	        if(rootN.end == true){
    	             System.out.println("We found the Query you were looking for!");
    	             //rootN.ContactD.print();
    	             viewContactFName=rootN.ContactD.FName;
    	             viewContactLName=rootN.ContactD.LName;
    	             viewContactPhone1=rootN.ContactD.PNumber;
    	             viewContactPhone2=rootN.ContactD.PNumber2;
    	             viewContactEmail1=rootN.ContactD.Email;
    	             viewContactEmail2=rootN.ContactD.Email2;
    	             viewContactDOB=rootN.ContactD.DOB;
    	             viewContactAddress=rootN.ContactD.Address;
    	             phoneTrie.SearchValueNumber = rootN; //this is for the delete function. 
    	        }
    	        else{
    	            System.out.println("Your search yeilded no results");        
    	        }
    	    }
    	    //Sequentially goes through all the letter ifs.
    	    if(c == '0'){
    	        if(rootN.zero != null){
    	        temp = ToSearchNumber(rootN.zero, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }
    	    }
    	    else if(c == '1'){
    	        if(rootN.i != null){
    	        temp = ToSearchNumber(rootN.i, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '2'){
    	        if(rootN.ii != null){
    	        temp = ToSearchNumber(rootN.ii, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '3'){
    	        if(rootN.iii != null){
    	        temp = ToSearchNumber(rootN.iii, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '4'){
    	        if(rootN.iv != null){
    	        temp = ToSearchNumber(rootN.iv, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '5'){
    	        if(rootN.v != null){
    	        temp = ToSearchNumber(rootN.v, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '6'){
    	        if(rootN.vi != null){
    	        temp = ToSearchNumber(rootN.vi, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '7'){
    	        if(rootN.vii != null){
    	        temp = ToSearchNumber(rootN.vii, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else if(c == '8'){
    	        if(rootN.viii != null){
    	        temp = ToSearchNumber(rootN.viii, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }    
    	    else if(c == '9'){
    	        if(rootN.ix != null){
    	        temp = ToSearchNumber(rootN.ix, name, strV);
    	        }
    	        else{
    	        System.out.println("Your search yeilded no results");        
    	        }        
    	    }
    	    else{
    	    }
    	return rootN;     
    	}
    
    //displays all first names from the fNameTrie given root node 
    public Node ToDisplay(Node rootN){ // First Name

//      for(int i = 0; i < 1; i++){
          
          if(rootN.a != null){
          ToDisplay(rootN.a);
          }
          
          if(rootN.b != null){
          ToDisplay(rootN.b);
          }
          
          if(rootN.c != null){
          ToDisplay(rootN.c);
          }
          
          if(rootN.d != null){
          ToDisplay(rootN.d);
          }
          
          if(rootN.e != null){
          ToDisplay(rootN.e);
          }
          
          if(rootN.f != null){
          ToDisplay(rootN.f);
          }
          
          if(rootN.g != null){
          ToDisplay(rootN.g);
          }
          
          if(rootN.h != null){
          ToDisplay(rootN.h);
          } 
          
          if(rootN.i != null){
          ToDisplay(rootN.i);
          } 
          
          if(rootN.j != null){
          ToDisplay(rootN.j);
          }        
          
          if(rootN.k != null){
          ToDisplay(rootN.k);
          }
          
          if(rootN.l != null){
          ToDisplay(rootN.l);
          }
          
          if(rootN.m != null){
          ToDisplay(rootN.m);
          }
          
          if(rootN.n != null){
          ToDisplay(rootN.n);
          }
          
          if(rootN.o != null){
          ToDisplay(rootN.o);
          }
          
          if(rootN.p != null){
          ToDisplay(rootN.p);
          }
          
          if(rootN.q != null){
          ToDisplay(rootN.q);
          } 
          
          if(rootN.r != null){
          ToDisplay(rootN.r);
          } 
          
          if(rootN.s != null){
          ToDisplay(rootN.s);
          }            
          
          if(rootN.t != null){
          ToDisplay(rootN.t);
          }
          
          if(rootN.u != null){
          ToDisplay(rootN.u);
          }
          
          if(rootN.v != null){
          ToDisplay(rootN.v);
          }
          
          if(rootN.w != null){
          ToDisplay(rootN.w);
          }
           
          if(rootN.x != null){
          ToDisplay(rootN.x);
          } 
          
          if(rootN.y != null){
          ToDisplay(rootN.y);
          } 
          
          if(rootN.z != null){
          ToDisplay(rootN.z);
          }            
          
          if(rootN.end == true){
              for(int i = 0; i < rootN.FirstName.size(); i++){
              //rootN.FirstName.get(i).print();
              SearchResultsGUI.listResults.addElement(rootN.FirstName.get(i).FName+" "+rootN.FirstName.get(i).LName+": "+rootN.FirstName.get(i).PNumber);
              }        
          }
          else{
          }
    //  }
  return rootN;
  } //For First Name

    //calls the toDisplayNamesWhenTyped method for first names from the fNameTrie
    public void DisplayNameWhenTyped(String Name){
    	Node rootN; 
    	rootN = fNameTrie.root;     
        
    	rootN = ToDisplayNameWhenTyped(Name, rootN, 0);
    	System.out.println(rootN.alphabet); //DEBUGGING
    	ToDisplay(rootN);

  } 
    //returns the node corresponding to the last character of the input to give the toDisplay method
    public Node ToDisplayNameWhenTyped(String Name, Node rootN, int StrV){
    	char c = 's'; 

    	if(StrV < Name.length()){
    		c = Name.charAt(StrV);
    		// System.out.println("C - " + c);
    		// System.out.println("Strv " + StrV + " lenth: " + Name.length());
    		StrV++;
    	}
    	else{
    		//System.out.println("Strv " + StrV + " lenth: " + Name.length());
    		// System.out.println("here");
    		return rootN; 
    	}
    	if(c == 'a'){
    		if(rootN.a != null){
    			rootN = rootN.a;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
    		}
    		else{
    			System.out.println("Your search yeilded no results");        
    		}
    	}	
    	else if(c == 'b'){
    		if(rootN.b != null){
    			rootN = rootN.b;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
    		}
    		else{
    			System.out.println("Your search yeilded no results");        
    		}        
    	}
    	else if(c == 'c'){
    		if(rootN.c != null){
    			rootN = rootN.c;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
    		}
    		else{
    			System.out.println("Your search yeilded no results");        
    		}        
    	}
    	else if(c == 'd'){
    		if(rootN.d != null){
    			rootN = rootN.d;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

    		}
    		else{
    			System.out.println("Your search yeilded no results");        
    		}        
    	}
    	else if(c == 'e'){
    		if(rootN.e != null){
    			rootN = rootN.e;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

    		}
    		else{
    			System.out.println("Your search yeilded no results");        
    		}        
    	}
    	else if(c == 'f'){
    		if(rootN.f != null){
    			rootN = rootN.f;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

    		}
          else{
        	  System.out.println("Your search yeilded no results");        
          }        
    	}
    	else if(c == 'g'){
    		if(rootN.g != null){
    			rootN = rootN.g;
    			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
    		}
    		else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'h'){
          if(rootN.h != null){
              rootN = rootN.h;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'i'){
          if(rootN.i != null){
              rootN = rootN.i;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'j'){
          if(rootN.j != null){
              rootN = rootN.j;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'k'){
          if(rootN.k != null){
              rootN = rootN.k;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'l'){
          if(rootN.l != null){
              rootN = rootN.l;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'm'){
          if(rootN.m != null){
        	  System.out.println("true m"); //DEBUGGING
              rootN = rootN.m;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'n'){
          if(rootN.n != null){
              rootN = rootN.n;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'o'){
          if(rootN.o != null){
        	  System.out.println("true o"); //DEBUGGING
              rootN = rootN.o;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'p'){
          if(rootN.p != null){
              rootN = rootN.p;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'q'){
          if(rootN.q != null){
              rootN = rootN.q;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'r'){
          if(rootN.r != null){
              rootN = rootN.r;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 's'){
          if(rootN.s != null){
              rootN = rootN.s;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 't'){
          if(rootN.t != null){
              rootN = rootN.t;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'u'){
          if(rootN.u != null){
              rootN = rootN.u;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'v'){
          if(rootN.v != null){
              rootN = rootN.v;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'w'){
          if(rootN.w != null){
              rootN = rootN.w;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'x'){
          if(rootN.x != null){
              rootN = rootN.x;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'y'){
          if(rootN.y != null){
              rootN = rootN.y;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else if(c == 'z'){
          if(rootN.z != null){
              rootN = rootN.z;
              rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
          }
          else{
          System.out.println("Your search yeilded no results");        
          }        
      }
      else{
      }
  return rootN;     
         
  }

    /*
     * Display methods for last name
     */
    public Node ToDisplayLastName(Node rootN){ //For Last Name

//      for(int i = 0; i < 1; i++){
          
          if(rootN.a != null){
          ToDisplayLastName(rootN.a);
          }
          
          if(rootN.b != null){
          ToDisplayLastName(rootN.b);
          }
          
          if(rootN.c != null){
          ToDisplayLastName(rootN.c);
          }
          
          if(rootN.d != null){
          ToDisplayLastName(rootN.d);
          }
          
          if(rootN.e != null){
          ToDisplayLastName(rootN.e);
          }
          
          if(rootN.f != null){
          ToDisplayLastName(rootN.f);
          }
          
          if(rootN.g != null){
          ToDisplayLastName(rootN.g);
          }
          
          if(rootN.h != null){
          ToDisplayLastName(rootN.h);
          } 
          
          if(rootN.i != null){
          ToDisplayLastName(rootN.i);
          } 
          
          if(rootN.j != null){
          ToDisplayLastName(rootN.j);
          }        
          
          if(rootN.k != null){
          ToDisplayLastName(rootN.k);
          }
          
          if(rootN.l != null){
          ToDisplayLastName(rootN.l);
          }
          
          if(rootN.m != null){
          ToDisplayLastName(rootN.m);
          }
          
          if(rootN.n != null){
          ToDisplayLastName(rootN.n);
          }
          
          if(rootN.o != null){
          ToDisplayLastName(rootN.o);
          }
          
          if(rootN.p != null){
          ToDisplayLastName(rootN.p);
          }
          
          if(rootN.q != null){
          ToDisplayLastName(rootN.q);
          } 
          
          if(rootN.r != null){
          ToDisplayLastName(rootN.r);
          } 
          
          if(rootN.s != null){
          ToDisplayLastName(rootN.s);
          }            
          
          if(rootN.t != null){
          ToDisplayLastName(rootN.t);
          }
          
          if(rootN.u != null){
          ToDisplayLastName(rootN.u);
          }
          
          if(rootN.v != null){
          ToDisplayLastName(rootN.v);
          }
          
          if(rootN.w != null){
          ToDisplayLastName(rootN.w);
          }
           
          if(rootN.x != null){
          ToDisplayLastName(rootN.x);
          } 
          
          if(rootN.y != null){
          ToDisplayLastName(rootN.y);
          } 
          
          if(rootN.z != null){
          ToDisplayLastName(rootN.z);
          }            
          
          if(rootN.end == true){
              for(int i = 0; i < rootN.LastName.size(); i++){
              //rootN.LastName.get(i).print();
            	SearchResultsGUI.listResults.addElement(rootN.LastName.get(i).FName+" "+rootN.LastName.get(i).LName+": "+rootN.LastName.get(i).PNumber);  
              }        
          }
          else{
          }
    //  }
  return rootN;
  }

    public void DisplayNameWhenTyped2(String Name){
  Node rootN; 
  rootN = lNameTrie.RootLastName;     

  rootN = ToDisplayNameWhenTyped(Name, rootN, 0);
  ToDisplayLastName(rootN);

  }

    public Node ToDisplayNameWhenTyped2(String Name, Node rootN, int StrV){
      	char c = 's'; 

      	if(StrV < Name.length()){
      		c = Name.charAt(StrV);
      		// System.out.println("C - " + c);
      		// System.out.println("Strv " + StrV + " lenth: " + Name.length());
      		StrV++;
      	}
      	else{
      		//System.out.println("Strv " + StrV + " lenth: " + Name.length());
      		// System.out.println("here");
      		return rootN; 
      	}
      	if(c == 'a'){
      		if(rootN.a != null){
      			rootN = rootN.a;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
      		}
      		else{
      			System.out.println("Your search yeilded no results");        
      		}
      	}	
      	else if(c == 'b'){
      		if(rootN.b != null){
      			rootN = rootN.b;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
      		}
      		else{
      			System.out.println("Your search yeilded no results");        
      		}        
      	}
      	else if(c == 'c'){
      		if(rootN.c != null){
      			rootN = rootN.c;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
      		}
      		else{
      			System.out.println("Your search yeilded no results");        
      		}        
      	}
      	else if(c == 'd'){
      		if(rootN.d != null){
      			rootN = rootN.d;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

      		}
      		else{
      			System.out.println("Your search yeilded no results");        
      		}        
      	}
      	else if(c == 'e'){
      		if(rootN.e != null){
      			rootN = rootN.e;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

      		}
      		else{
      			System.out.println("Your search yeilded no results");        
      		}        
      	}
      	else if(c == 'f'){
      		if(rootN.f != null){
      			rootN = rootN.f;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);

      		}
            else{
          	  System.out.println("Your search yeilded no results");        
            }        
      	}
      	else if(c == 'g'){
      		if(rootN.g != null){
      			rootN = rootN.g;
      			rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
      		}
      		else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'h'){
            if(rootN.h != null){
                rootN = rootN.h;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'i'){
            if(rootN.i != null){
                rootN = rootN.i;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'j'){
            if(rootN.j != null){
                rootN = rootN.j;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'k'){
            if(rootN.k != null){
                rootN = rootN.k;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'l'){
            if(rootN.l != null){
                rootN = rootN.l;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'm'){
            if(rootN.m != null){
          	  System.out.println("true m"); //DEBUGGING
                rootN = rootN.m;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'n'){
            if(rootN.n != null){
                rootN = rootN.n;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'o'){
            if(rootN.o != null){
          	  System.out.println("true o"); //DEBUGGING
                rootN = rootN.o;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'p'){
            if(rootN.p != null){
                rootN = rootN.p;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'q'){
            if(rootN.q != null){
                rootN = rootN.q;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'r'){
            if(rootN.r != null){
                rootN = rootN.r;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 's'){
            if(rootN.s != null){
                rootN = rootN.s;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 't'){
            if(rootN.t != null){
                rootN = rootN.t;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'u'){
            if(rootN.u != null){
                rootN = rootN.u;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'v'){
            if(rootN.v != null){
                rootN = rootN.v;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'w'){
            if(rootN.w != null){
                rootN = rootN.w;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'x'){
            if(rootN.x != null){
                rootN = rootN.x;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'y'){
            if(rootN.y != null){
                rootN = rootN.y;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else if(c == 'z'){
            if(rootN.z != null){
                rootN = rootN.z;
                rootN=ToDisplayNameWhenTyped(Name, rootN, StrV);
            }
            else{
            System.out.println("Your search yeilded no results");        
            }        
        }
        else{
        }
    return rootN;     
           
    }

    /*
     * Display methods for number
     */
    public NodeNumber toDisplayNumber(NodeNumber rootN){ //For Last Name

//      for(int i = 0; i < 1; i++){
          
          if(rootN.i != null){
          toDisplayNumber(rootN.i);
          }
          
          if(rootN.ii != null){
          toDisplayNumber(rootN.ii);
          }
          
          if(rootN.iii != null){
        	  toDisplayNumber(rootN.iii);
          }
          
          if(rootN.iv != null){
        	  toDisplayNumber(rootN.iv);
          }
          
          if(rootN.v != null){
        	  toDisplayNumber(rootN.v);
          }
          
          if(rootN.vi != null){
        	  toDisplayNumber(rootN.vi);
          }
          
          if(rootN.vii != null){
        	  toDisplayNumber(rootN.vii);
          }
          
          if(rootN.viii != null){
        	  toDisplayNumber(rootN.viii);
          } 
          
          if(rootN.ix != null){
        	  toDisplayNumber(rootN.ix);
          } 
          
          if(rootN.zero != null){
        	  toDisplayNumber(rootN.zero);
          }        
          if(rootN.end == true){
              //for(int i = 0; i < rootN.LastName.size(); i++){
              //rootN.LastName.get(i).print();
            	SearchResultsGUI.listResults.addElement(rootN.ContactD.FName+" "+rootN.ContactD.LName+": "+rootN.ContactD.PNumber);  
                     
          }
          else{
          }
    //  }
  return rootN;
  }

	
	public void SearchNumberWhenTyped(String Number){
		int t = 0;
		NodeNumber temp;
		temp = phoneTrie.rootNumber; 
		//Goes into this recursive function to fetch value. 
		temp = ToSearchNumber2(phoneTrie.rootNumber, Number, t);
		toDisplayNumber(temp);
		}

	public NodeNumber ToSearchNumber2(NodeNumber rootN, String name, int strV ){
		    
		    char c = 0; //to Store each letter of string.
		    NodeNumber temp; 
		    
		    if(strV < name.length()){ //itrates through string and stores letter in 'c' after each recursive call. 
		    c = name.charAt(strV);
		    strV++;
		    }
		    else{ //checks once we have reached the end of the string if the boolean/marker is true then the word is present else no. 
		        return rootN;
		    }
		    //Sequentially goes through all the letter ifs.
		    if(c == '0'){
		        if(rootN.zero != null){
		        rootN = ToSearchNumber2(rootN.zero, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }
		    }
		    else if(c == '1'){
		        if(rootN.i != null){
		        rootN = ToSearchNumber2(rootN.i, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '2'){
		        if(rootN.ii != null){
		        rootN = ToSearchNumber2(rootN.ii, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '3'){
		        if(rootN.iii != null){
		        rootN= ToSearchNumber2(rootN.iii, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '4'){
		        if(rootN.iv != null){
		        rootN = ToSearchNumber2(rootN.iv, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '5'){
		        if(rootN.v != null){
		        rootN = ToSearchNumber2(rootN.v, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '6'){
		        if(rootN.vi != null){
		        rootN = ToSearchNumber2(rootN.vi, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '7'){
		        if(rootN.vii != null){
		        rootN = ToSearchNumber2(rootN.vii, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else if(c == '8'){
		        if(rootN.viii != null){
		        rootN = ToSearchNumber2(rootN.viii, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }    
		    else if(c == '9'){
		        if(rootN.ix != null){
		        rootN = ToSearchNumber2(rootN.ix, name, strV);
		        }
		        else{
		        System.out.println("Your search yeilded no results");        
		        }        
		    }
		    else{
		    }
		return rootN;     
		}

	/*
	 * Methods for deleting first name trie
	 */
	public void Delete(String name, String number){

		ToSearch(fNameTrie.root, name, 0); //First Searches for the name. 
		System.out.println(fNameTrie.SearchValue); //DEBUGGING
		if(fNameTrie.SearchValue != null){ //Keeps the references of the last character of the word from the seach value
		                         // turns the boolean off. 
		    System.out.println("Now deleting it First Name");
		    if(fNameTrie.SearchValue.end == true){
		    	System.out.println("truth");
		    	//fNameTrie.SearchValue.end = false;        
		    	//fNameTrie.SearchValue.ContactD = null; 
		    	//now traverse the linked list 
		    	for (int i=0; i<fNameTrie.SearchValue.FirstName.size(); i++){
		    		if (fNameTrie.SearchValue.FirstName.get(i).PNumber.equals(number)) {//where name is the number passed
		    			System.out.println(fNameTrie.SearchValue.FirstName.get(i).FName+" this guy is here"); //DEBUGGING
		    			fNameTrie.SearchValue.FirstName.remove(i);
		    			System.out.println("it is removed"); //DEBUGGING
		    			//System.out.println(fNameTrie.SearchValue.FirstName.get(i).FName+" this guy is still here"); //DEBUGGING
		    		}
		    	}
		    
		    	//SearchValue.end = false; 
			    System.out.println("'" +name + "' has been successfully deleted");
			    //System.out.println(fNameTrie.SearchValue.FirstName.getLast().FName); //DEBUGGING
		    }
		    
		    
		    }
		else{
		    System.out.println("We were unable to perform deletion");
		}
		//fNameTrie.SearchValue = null; //for later use. This is a global variable. 
		} //Delete function would be configured

	public Node ToSearch(Node rootN, String name, int strV ){
	    
	    char c = 0; //to Store each letter of string.
	    Node temp; 
	    
	    if(strV < name.length()){ //itrates through string and stores letter in 'c' after each recursive call. 
	    c = name.charAt(strV);
	    strV++;
	    }
	    else{ //checks once we have reached the end of the string if the boolean/marker is true then the word is present else no. 
	        if(rootN.end == true){
	             System.out.println("We found the Query you were looking for!");
	             for(int i = 0; i < rootN.FirstName.size(); i++){
	             //rootN.FirstName.get(i).print();
	             fNameTrie.SearchValue=rootN;
	             System.out.println(fNameTrie.SearchValue+"this");
	             }
	        }
	        else{
	            System.out.println("Your search yeilded no results");        
	        }
	    }
	    //Sequentially goes through all the letter ifs.
	    if(c == 'a'){
	        if(rootN.a != null){
	        temp = ToSearch(rootN.a, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }
	    }
	    else if(c == 'b'){
	        if(rootN.b != null){
	        temp = ToSearch(rootN.b, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'c'){
	        if(rootN.c != null){
	        temp = ToSearch(rootN.c, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'd'){
	        if(rootN.d != null){
	        temp = ToSearch(rootN.d, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'e'){
	        if(rootN.e != null){
	        temp = ToSearch(rootN.e, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'f'){
	        if(rootN.f != null){
	        temp = ToSearch(rootN.f, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'g'){
	        if(rootN.g != null){
	        temp = ToSearch(rootN.g, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'h'){
	        if(rootN.h != null){
	        temp = ToSearch(rootN.h, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'i'){
	        if(rootN.i != null){
	        temp = ToSearch(rootN.i, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'j'){
	        if(rootN.j != null){
	        temp = ToSearch(rootN.j, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'k'){
	        if(rootN.k != null){
	        temp = ToSearch(rootN.k, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'l'){
	        if(rootN.l != null){
	        temp = ToSearch(rootN.l, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'm'){
	        if(rootN.m != null){
	        temp = ToSearch(rootN.m, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'n'){
	        if(rootN.n != null){
	        temp = ToSearch(rootN.n, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'o'){
	        if(rootN.o != null){
	        temp = ToSearch(rootN.o, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'p'){
	        if(rootN.p != null){
	        temp = ToSearch(rootN.p, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'q'){
	        if(rootN.q != null){
	        temp = ToSearch(rootN.q, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'r'){
	        if(rootN.r != null){
	        temp = ToSearch(rootN.r, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 's'){
	        if(rootN.s != null){
	        temp = ToSearch(rootN.s, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 't'){
	        if(rootN.t != null){
	        temp = ToSearch(rootN.t, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'u'){
	        if(rootN.u != null){
	        temp = ToSearch(rootN.u, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'v'){
	        if(rootN.v != null){
	        temp = ToSearch(rootN.v, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'w'){
	        if(rootN.w != null){
	        temp = ToSearch(rootN.w, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'x'){
	        if(rootN.x != null){
	        temp = ToSearch(rootN.x, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'y'){
	        if(rootN.y != null){
	        temp = ToSearch(rootN.y, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'z'){
	        if(rootN.z != null){
	        temp = ToSearch(rootN.z, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else{
	    }
	return rootN;     
	}

	/*
	 * Methods for deleting last name trie
	 */
	public void Delete2(String name, String number){

		ToSearch3(lNameTrie.RootLastName, name, 0); //First Searches for the name. 
		//System.out.println(lNameTrie.SearchValue); //DEBUGGING
		if(lNameTrie.SearchValue != null){ //Keeps the references of the last character of the word from the seach value
		                         // turns the boolean off. 
		    System.out.println("Now deleting it Last Name");
		    if(lNameTrie.SearchValue.end == true){
		    	System.out.println("truth");
		    	//fNameTrie.SearchValue.end = false;        
		    	//fNameTrie.SearchValue.ContactD = null; 
		    	//now traverse the linked list 
		    	for (int i=0; i<lNameTrie.SearchValue.LastName.size(); i++){
		    		if (lNameTrie.SearchValue.LastName.get(i).PNumber.equals(number)) {//where name is the number passed
		    			System.out.println(lNameTrie.SearchValue.LastName.get(i).LName+" this guy is here"); //DEBUGGING
		    			lNameTrie.SearchValue.LastName.remove(i);
		    			System.out.println("it is removed"); //DEBUGGING
		    			//System.out.println(fNameTrie.SearchValue.FirstName.get(i).FName+" this guy is still here"); //DEBUGGING
		    		}
		    	}
		    
		    	//SearchValue.end = false; 
			    System.out.println("'" +name + "' has been successfully deleted");
			    //System.out.println(fNameTrie.SearchValue.FirstName.getLast().FName); //DEBUGGING
		    }
		    
		    
		    }
		else{
		    System.out.println("We were unable to perform deletion");
		}
		//fNameTrie.SearchValue = null; //for later use. This is a global variable. 
		} //Delete function would be configured

	public Node ToSearch3(Node rootN, String name, int strV ){
	    System.out.println("we are now in the desired method");
	    char c = 0; //to Store each letter of string.
	    Node temp; 
	    
	    if(strV < name.length()){ //itrates through string and stores letter in 'c' after each recursive call. 
	    c = name.charAt(strV);
	    strV++;
	    }
	    else{ //checks once we have reached the end of the string if the boolean/marker is true then the word is present else no. 
	        if(rootN.end == true){
	        	 lNameTrie.SearchValue=rootN;
	        	 System.out.println(rootN.alphabet);
	        	 System.out.println(lNameTrie.SearchValue.alphabet);
	             System.out.println("We found the Query you were looking for! hello");
	             for(int i = 0; i < rootN.LastName.size(); i++){
	             rootN.LastName.get(i).print();
	             //lNameTrie.SearchValue=rootN;
	             //System.out.println(lNameTrie.SearchValue+"this");
	            }
	             
	        }
	        else{
	            System.out.println("Your search yeilded no results");        
	        }
	    }
	    //Sequentially goes through all the letter ifs.
	    if(c == 'a'){
	        if(rootN.a != null){
	        temp = ToSearch3(rootN.a, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }
	    }
	    else if(c == 'b'){
	        if(rootN.b != null){
	        temp = ToSearch3(rootN.b, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'c'){
	        if(rootN.c != null){
	        temp = ToSearch3(rootN.c, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'd'){
	        if(rootN.d != null){
	        temp = ToSearch3(rootN.d, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'e'){
	        if(rootN.e != null){
	        temp = ToSearch3(rootN.e, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'f'){
	        if(rootN.f != null){
	        temp = ToSearch3(rootN.f, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'g'){
	        if(rootN.g != null){
	        temp = ToSearch3(rootN.g, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'h'){
	        if(rootN.h != null){
	        temp = ToSearch3(rootN.h, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'i'){
	        if(rootN.i != null){
	        temp = ToSearch3(rootN.i, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'j'){
	        if(rootN.j != null){
	        temp = ToSearch3(rootN.j, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'k'){
	        if(rootN.k != null){
	        temp = ToSearch3(rootN.k, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'l'){
	        if(rootN.l != null){
	        temp = ToSearch3(rootN.l, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'm'){
	        if(rootN.m != null){
	        temp = ToSearch3(rootN.m, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'n'){
	        if(rootN.n != null){
	        temp = ToSearch3(rootN.n, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'o'){
	        if(rootN.o != null){
	        temp = ToSearch3(rootN.o, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'p'){
	        if(rootN.p != null){
	        temp = ToSearch3(rootN.p, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'q'){
	        if(rootN.q != null){
	        temp = ToSearch3(rootN.q, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'r'){
	        if(rootN.r != null){
	        temp = ToSearch3(rootN.r, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 's'){
	        if(rootN.s != null){
	        temp = ToSearch3(rootN.s, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 't'){
	        if(rootN.t != null){
	        temp = ToSearch3(rootN.t, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'u'){
	        if(rootN.u != null){
	        temp = ToSearch3(rootN.u, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'v'){
	        if(rootN.v != null){
	        temp = ToSearch3(rootN.v, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'w'){
	        if(rootN.w != null){
	        temp = ToSearch3(rootN.w, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'x'){
	        if(rootN.x != null){
	        temp = ToSearch3(rootN.x, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'y'){
	        if(rootN.y != null){
	        temp = ToSearch3(rootN.y, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else if(c == 'z'){
	        if(rootN.z != null){
	        temp = ToSearch3(rootN.z, name, strV);
	        }
	        else{
	        System.out.println("Your search yeilded no results");        
	        }        
	    }
	    else{
	    }
	return rootN;     
	}

	}
